# -*- coding: utf-8 -*-
"""Air Bnb Booking analysis EDA Submission.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UDPlJYa1xUaMEzIU9eb78uXyZ8tipWJs

# **Project Name**    - Air Bnb Booking Analysis

##### **Project Type**    - EDA/Regression/Classification/Unsupervised
##### **Contribution**    - Individual
##### **Chandrashekhar Azad**

# **Project Summary -**

The project aims to analyze a dataset from Airbnb, a popular hotel booking platform. The dataset contains approximately 49,000 rows and 16 columns, providing valuable insights into various attributes related to hotel bookings. Airbnb offers a diverse range of accommodations, including hotel rooms, apartments, and shared rooms, making it a growing platform in the region.

The dataset encompasses crucial information about the hotels, such as their names, unique IDs, host details, and neighborhood groups indicating their locations. Additional columns include details about specific neighborhoods, latitude and longitude coordinates for easy navigation, room types available, pricing information, and minimum nights required for bookings.

Customer reviews play a vital role in assessing hotel quality and satisfaction. The dataset includes columns indicating the number of reviews each hotel has received, the dates of the last reviews, and the average number of reviews per month. These insights can help identify popular hotels that consistently receive positive feedback from customers.

Furthermore, the dataset provides information on hotel room availability throughout the year. Some rooms might be fully booked, while others may not have been visited by customers, depending on the hotel's location and services offered.

To gain deeper insights into the dataset, the project will employ various visualization techniques and utilize the powerful pandas library. Visualizations will help identify trends, patterns, and correlations within the dataset, enabling informed decision-making and strategic planning in the hotel industry.

By analyzing this Airbnb dataset, we can uncover valuable insights that can be utilized by hoteliers, travel agencies, and customers alike. Understanding customer preferences, popular locations, and pricing trends can significantly impact business strategies, optimize revenue, and enhance customer experiences in the hospitality industry.

# **GitHub Link -**

https://github.com/chandrashekhar76316/Airbnbproject/blob/main/Air_Bnb_Booking_analysis_EDA_Submission.ipynb

# **Problem Statement**

The Airbnb Data Analysis project revolves around understanding the factors influencing the pricing of properties listed on Airbnb. Key questions include identifying the features, facilities, and amenities that impact property prices, analyzing room types and their correlation with pricing, and determining the relevance of various attributes to the overall pricing structure. The goal is to gain insights into the pricing trends of Airbnb listings and explore the relationship between different property characteristics and their associated prices. The project aims to address these questions through comprehensive data analysis, providing valuable information for both hosts and guests on the platform.

#### **Define Your Business Objective?**

The business objective of Airbnb booking analysis can vary depending on the specific goals and needs of the company. However, some common business objectives of Airbnb booking analysis may include:

1. Pricing Optimization: Analyzing the 'price' column can help determine optimal pricing strategies for different types of accommodations based on factors such as neighbourhood, room type, and availability.

2. Demand Forecasting: By examining 'minimum_nights', 'number_of_reviews', and 'availability_365', you can forecast demand for accommodations in different neighbourhoods and identify popular booking periods.

3. Host Performance Analysis: 'host_id', 'host_name', and 'calculated_host_listings_count' can be utilized to analyze the performance of hosts, identify top-performing hosts, and provide insights for host management and rewards.

4. Customer Satisfaction and Experience: Analyzing 'number_of_reviews', 'last_review', and 'reviews_per_month' can provide insights into overall customer satisfaction levels, identify trends in guest feedback, and assist in improving the guest experience.

5. Market Expansion Planning: Examining the 'neighbourhood' and 'neighbourhood_group' columns can help identify popular or emerging neighbourhoods where Airbnb can focus its expansion efforts.

6. Fraud Detection: Utilizing the 'latitude' and 'longitude' columns can help identify and prevent potential instances of fraud by detecting irregular booking patterns in specific areas.

These are just some examples of potential business objectives for Airbnb booking analysis. The specific objectives would depend on the company's goals and the insights they seek from the data.

# **General Guidelines** : -

1.   Well-structured, formatted, and commented code is required.
2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.
     
     The additional credits will have advantages over other students during Star Student selection.
       
             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go
                       without a single error logged. ]

3.   Each and every logic should have proper comments.
4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.
        

```
# Chart visualization code
```
            

*   Why did you pick the specific chart?
*   What is/are the insight(s) found from the chart?
* Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

5. You have to create at least 20 logical & meaningful charts having important insights.


[ Hints : - Do the Vizualization in  a structured way while following "UBM" Rule.

U - Univariate Analysis,

B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)

M - Multivariate Analysis
 ]

# ***Let's Begin !***

## ***1. Know Your Data***

### Import Libraries
"""

# Importing necessary libraries for data visualization
import pandas as pd          # Library for data manipulation and analysis
import numpy as np           # Library for numerical operations
import matplotlib.pyplot as plt   # Library for creating static, animated, and interactive visualizations
import seaborn as sns         # Library based on matplotlib for statistical data visualization
import plotly.express as px   # High-level interface for creating various charts using Plotly

"""various Python libraries for data manipulation and visualization have been imported:

1. `pandas` (pd): A powerful library for data manipulation and analysis.
2. `numpy` (np): Used for numerical operations and handling arrays or matrices.
3. `matplotlib.pyplot` (plt): A comprehensive library for creating static, animated, and interactive visualizations in Python.
4. `seaborn` (sns): Built on top of matplotlib, seaborn is specifically designed for statistical data visualization.
5. `plotly.express` (px): A high-level interface for creating a variety of interactive charts using Plotly, a library known for its interactive and web-based visualizations.

### Dataset Loading
"""

# Load Dataset
# Mounting your drive, so that you can access the files there
#you'll receive a authentication prompt. Complete it.
from google.colab import drive
drive.mount('/content/drive')

# here loading the given data set
air_df = pd.read_csv('/content/drive/MyDrive/Airbnb.csv')
# Here is the first look of data

"""### Dataset First View"""

# Dataset First Look
air_df.head()

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
air_df.shape

"""### Dataset Information"""

air_df.columns

# Dataset Info
air_df.info()

"""#### Duplicate Values"""

# Dataset Duplicate Value Count
duplicate_rows = air_df.duplicated()
duplicate_rows.sum()

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
air_df.isna().sum()

# Visualizing the missing values
sns.heatmap(air_df.isnull(),cbar = False)

"""### What did you know about your dataset?

The dataset provided for Airbnb booking analysis consists of 48,895 instances with 16 attributes. The attributes include the unique identifier ('id') and descriptive information such as the name of the listing ('name'), host name ('host_name'), neighbourhood group, and specific neighbourhood of the listing. Location coordinates are available as latitude and longitude details.


Other attributes include the type of rooms available ('room_type'), the rental price ('price'), the minimum number of nights that can be booked ('minimum_nights'), the number of reviews received by the listing ('number_of_reviews'), the date of the last review ('last_review'), the average number of reviews per month ('reviews_per_month'), the count of listings by the host ('calculated_host_listings_count'), and the number of days the rooms are available in a year ('availability_365').

## ***2. Understanding Your Variables***
"""

# Dataset Columns
columns = air_df.columns.tolist()
columns

# Dataset Describe
air_df.describe()

"""### Variables Description

The dataset contains the following columns and information about the columns:

1.id: Unique identifier for each Airbnb listing.

2.name: Name or title of the listing.

3.host_id: Unique identifier for the host of the listing.

4.host_name: Name of the host.

5.neighbourhood_group: Categorical variable indicating the group or region of the neighbourhood.

6.neighbourhood: Categorical variable indicating the neighbourhood where the listing is located.

7.latitude: Latitude coordinate of the listing's location.

8.longitude: Longitude coordinate of the listing's location.

9.room_type: Categorical variable indicating the type of room available (e.g., entire home, private room, shared room).

10.price: Numeric variable representing the price of the listing.

11.minimum_nights: Numeric variable indicating the minimum number of nights required for a booking.

12.number_of_reviews: Numeric variable representing the total number of reviews for the listing.

13.last_review: Date of the last review for the listing.

14.reviews_per_month: Numeric variable indicating the average number of reviews per month.

15.calculated_host_listings_count: Numeric variable representing the count of listings by the host.

16.availability_365: Numeric variable indicating the number of days the listing is available in a year.

### Check Unique Values for each variable.
"""

air_df.dtypes

# Check Unique Values for each variable.
for column in columns:
    unique_values = air_df[column].nunique()
    print(f"number of Unique values for {column}:", unique_values)

"""## 3. ***Data Wrangling***

### Data Wrangling Code
"""

# Write your code to make your dataset analysis ready.

#  Handle missing values
air_df.replace('?', np.nan, inplace=True)  # replace '?' with NaN

"""**Data Cleaning**

When data is missing from a dataset, it may be represented by other values such as '?' question marks, '-' dashes or blank spaces.

These values can create problems during data analysis as they cannot be recognized as missing data by most software packages and can interfere with calculations and statistics.

By converting these values to NaN (Not a Number), we can standardize the representation of missing data and make it easier to handle and process during data analysis. NaN values are recognized by most software packages as missing data and can be easily removed, imputed or handled in other ways during data analysis. NaN stands for "Not a Number". It is a special floating-point value in Python that represents an undefined or unrepresentable value. In the context of datasets, NaN values typically represent missing or undefined values.
"""

from google.colab import drive
drive.mount('/content/drive')

# to print only rows with NaN values
air_df[air_df.isnull().any(axis=1)]

# drop rows with missing values name the price column
air_df.dropna(subset=['name'], axis=0, inplace=True)

# drop rows with missing values in the host_name column
air_df.dropna(subset=['host_name'], axis=0, inplace=True)

"""The air_df.dropna(subset=['name'], axis=0, inplace=True) command and air_df.dropna(subset=['host_name'], axis=0, inplace=True) comand are data cleaning operation that removes rows with missing values in the "name" and "host_name" columns from the air_df dataframe object. This operation is useful because missing values can cause errors in machine learning algorithms, and removing rows with missing values can improve the quality of the data used for analysis."""

# to now how many NaN values are present in the dataset
air_df.isna().sum()

"""Now the last_reviews columns has approx 10,000 NaN values. Since it is a huge in number that i cannot ignor this so in this columns we fill most frequent dates."""

# we find the most frequent date that occur in the last_review column of dataset
most_frequent_date = air_df['last_review'].value_counts().idxmax()
most_frequent_date

# here i put the most frequent date in place of NaN values in last_review column
air_df['last_review'].fillna(most_frequent_date, inplace = True)

# here i put mean value in place of NaN values in reviews per month column
air_df['reviews_per_month'].fillna(air_df['reviews_per_month'].astype(float).mean(), inplace=True)

# to see the data is cleaned
air_df.info()

"""Now th e data is cleaned. All columns have nun-null data.

### What all manipulations have you done and insights you found?

In air_df dataset "name" column have 16 NaN values and "host_name" column has 20 NaN values, so i have drop these rows from the dataset. The "last_review" column has 10052 NaN values. It cannot be ignore so i have impute the most frequent date in place of NaN values. And same with "reviews_last_month" column there is also 10052 NaN values. So, here i put the mean value of reviews in place of NaN values. This operation is useful because missing values can cause errors in machine learning algorithms, and filling in missing values with a reasonable estimate can improve the quality of the data used for analysis.

Now there is 6 columns of string data types, 7 columns have integer data types and 3 columns have float data types and all 16 columns have not null value.

## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***
"""

# Adding a new column of Rooms_occupied whole year by substracting availability_365 from 365
air_df.loc[:,"rooms_occupied_365"]=365- air_df.loc[:,"availability_365"]
# to show top 5 rows of data set
air_df.head()

"""#### Chart - 1"""

# Chart - 1 visualization code
#Making a pie chart of different room types.
fig = px.pie(air_df["room_type"], names="room_type")
# to show pie chart
fig.show()

# # Create a histogram using Plotly Express
fig = px.histogram(air_df, x="room_type", title="Distribution of Room Type", labels={"room_type": "Room type", "count": "Number of Hotels"})

# Update the x-axis label
fig.update_xaxes(title_text="Room type")

# Update the y-axis label
fig.update_yaxes(title="Number of Hotels")

# Display the histogram
fig.show()

"""##### 1. Why did you pick the specific chart?

It seems like i have analyzed the distribution of room types and preferences based on the data. Based on my analysis, I found that there are three types of rooms available: "entire home or apartment," "private rooms," and "shared rooms."

##### 2. What is/are the insight(s) found from the chart?

According to my findings, approximately 52% of the rooms are "Entire home or Apartment," indicating that this type of accommodation is the most common. Private rooms make up around 45.7% of the total rooms, making them the second most preferred option. Shared rooms, on the other hand, only account for about 2.37% of the available rooms, implying that people tend to avoid choosing shared accommodations in hotels.

Overall, it appears that people show a preference for "entire home or apartment" options, followed by private rooms, while shared rooms are less favored. These insights can be helpful for understanding customer preferences and making informed decisions related to accommodation offerings.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, The gained insights will help creating a positive business impact.

#### Chart - 2
"""

# Chart - 2 visualization code
# Grouping the DataFrame 'air_df1' by the 'room_type' column and calculating the sum of the 'rooms_occupied_365' for each group.
rooms_occupied_data = air_df.groupby("room_type")["rooms_occupied_365"].sum()
print(pd.DataFrame(rooms_occupied_data))

rooms_avail_data = air_df.groupby("room_type")["availability_365"].sum()
print(pd.DataFrame(rooms_avail_data))

dims = pd.concat([rooms_occupied_data,rooms_avail_data], axis =1)
dims

# Distribution of rooms occupied throughout the year and room type
#dims.plot(kind='bar',rot = 90)
fig = px.bar(dims,barmode="group")
fig.update_layout(title = 'Total Rooms Type and sum of all Rooms Occupied and available over the year', xaxis_title='Room Type',yaxis_title = 'Sum of all Rooms occupied and available over the year')
fig.show()

"""##### 1. Why did you pick the specific chart?

From the above data, it is concluded that throughout the year, Entire homes or apartments exhibit the highest engagement, with a total occupancy count of 6,426,610. Following closely, private rooms show substantial utilization with 5,659,829 occurrences. However, shared rooms indicate a comparatively lower level of occupancy, with a total count of 235,479.

##### 2. What is/are the insight(s) found from the chart?

A trend where Entire homes/apartments are consistently in higher demand, while private rooms also enjoy considerable usage. In contrast, shared rooms experience lower occupancy rates, indicating potential opportunities for improvement or targeted marketing strategies for these accommodation types.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, The gained insights will help creating a positive business impact.

#### Chart - 3
"""

# Chart - 3 visualization code
# Grouping the DataFrame 'air_df' by the 'neighbourhood_group' column and counting occurrences in each group
air_dfcount = air_df.groupby('neighbourhood_group')['neighbourhood_group'].count()
air_dfcount

# Creating a bar plot using Matplotlib with neighborhood groups on the x-axis and their respective counts on the y-axis
plt.figure(figsize=(10, 5))
plt.bar(air_dfcount.index,air_dfcount.values)
# Displaying the bar plot
plt.show()

"""##### 1. Why did you pick the specific chart?

The data and graph shows a significant variation in the number of neighborhood groups across the five boroughs of New York City. Manhattan has the highest number, with 21,643 groups, followed by Brooklyn with 20,089. Queens has 5,664 groups,Bronx with 1,089 and Staten Island has the lowest number of 373.

##### 2. What is/are the insight(s) found from the chart?

These figures suggest that Manhattan and Brooklyn have more active and organized neighborhood communities compared to the other boroughs.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

yes.

#### Chart - 4
"""

# Chart - 4 visualization code
# Plot the bar plot
plt.figure(figsize=(12, 5))
sns.barplot(x=air_df["neighbourhood_group"],y = air_df["rooms_occupied_365"])
plt.title("Distribution of Neighbourhood Group Vs rooms occupied in a year")
plt.xlabel('Neighbourhood Group')
plt.ylabel('Rooms occupied in a year')

# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

Based on the above barplot, We can observe the distribution of different neighbourhood group and rooms occupied in a year.

##### 2. What is/are the insight(s) found from the chart?

Based on the above barplot, it can be observed that hotels in the Brooklyn and Manhattan neighborhoods have higher room occupancy rates throughout the year. On the other hand, hotels in Staten Island show lower room occupancy rates, indicating that they are partially occupied throughout the year.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

yes.

#### Chart - 5
"""

# Chart - 5 visualization code
# Creating a scatter plot using Seaborn with price on the x-axis, neighbourhood_group on the y-axis, and color-coded by neighbourhood_group
plt.figure(figsize=(15, 5))
sns.scatterplot(x="price", y="neighbourhood_group", hue="neighbourhood_group", data=air_df)

# Displaying the scatter plot
plt.show()

"""##### 1. Why did you pick the specific chart?

The scatter plots show the relationship between hotel room prices (on the x-axis) and neighbourhood groups (on the x-axis).

##### 2. What is/are the insight(s) found from the chart?

Most hotels are priced under 2000. A few high-end hotels in popular neighborhoods like Manhattan can cost around 10,000. Hotels in outer boroughs like Queens, Bronx, Staten Island are cheaper, mostly under 2000. There is a wide spread of mid-range hotels priced 2000-10,000. Factors like capacity, beach location, distance from city center seem to influence pricing. There are hotels in all the neighbourhood groups having hotel price zero.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Hotel prices in NYC vary widely but skew towards cheaper options under 2000, with some expensive high-end hotels and a mid-range spread. Location and other factors impact pricing.

#### Chart - 6
"""

# Grouping the 'air_df' DataFrame by the 'neighbourhood' column and counting occurrences in each group
air_dfcount1 = air_df.groupby('neighbourhood')['neighbourhood'].count()
# Selecting the top 20 neighborhoods with the highest counts
top_neighborhoods = air_dfcount1.nlargest(20)
top_neighborhoods

# Chart - 6 visualization code
# Creating a bar chart using Plotly Express with the 'top_neighborhoods' DataFrame
fig = px.bar(top_neighborhoods)

# Updating layout details such as title, x-axis title, and y-axis title
fig.update_layout(
    title="Distribution of Top 20 Neighbourhoods",
    xaxis_title="Neighbourhood",
    yaxis_title="Frequency"
)

# Displaying the figure
fig.show()

"""##### 1. Why did you pick the specific chart?

The chart above illustrates the distribution of the top 20 neighborhoods based on frequency.

##### 2. What is/are the insight(s) found from the chart?

Top Two Neighborhoods: The first two neighborhoods exhibit a notably higher frequency, surpassing 3700. This suggests a significant level of activity or prominence in these areas.

Majority of Neighborhoods: The majority of neighborhoods, however, show a lower frequency, with most falling below 500. This indicates that a significant portion of the sampled neighborhoods tends to be less active or have lower occurrences in their respective areas.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the chart provides insights into the varying levels of activity or prominence across the top 20 neighborhoods, with a clear distinction between the top-performing ones and those with comparatively lower frequencies.

#### Chart - 7
"""

# Chart - 7 visualization code

# calculate mean price for each room type
roomtype_price_means = air_df.groupby('room_type')['price'].mean()

# Create a bar plot for the average price for each room type
fig2 = px.bar(roomtype_price_means, x=roomtype_price_means.index, y='price')
fig2.update_layout(title='Average Price for each Room type',
                   xaxis_title='Room type',
                   yaxis_title='Average price')
fig2.show()

"""##### 1. Why did you pick the specific chart?

The barplot of the average prices by room type presents compelling insights into the pricing dynamics of different accommodation options.

##### 2. What is/are the insight(s) found from the chart?

Entire homes or apartments command the highest average price at 211.8, reflecting the premium associated with exclusive use of an entire living space. Private rooms follow with an average price of 89.8, offering a balance between affordability and personal space. Shared rooms have the lowest average price at 70, positioning them as the most budget-friendly option, likely appealing to cost-conscious travelers and those seeking a more communal and social experience. These insights illuminate the diverse pricing strategies and customer preferences within the lodging market, allowing hosts and guests to make informed decisions regarding accommodation choices and budget allocation.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

yes.

#### Chart - 8
"""

# Chart - 8 visualization code
# Assuming df is your DataFrame with the same structure as air_df
fig = px.scatter(air_df, x='price', y='rooms_occupied_365', color='room_type',
              labels={'price': 'Price of the Hotel', 'rooms_occupied_365': 'Number of days, rooms are occupied in the year'},
              title='Price of the Hotel Vs Rooms are occupied in the year')

# Display the plot
fig.show()

"""##### 1. Why did you pick the specific chart?

Interpreting Price and Occupancy Variation Over the Year The provided line plot depicts the relationship between room price and occupancy throughout the year.

##### 2. What is/are the insight(s) found from the chart?

Here's a breakdown of the observed patterns:

1.Zero Price Range: At a zero price point, the majority of rooms are occupied. This suggests that a certain category of rooms might be complimentary or included in a package, leading to high occupancy.

2.Price Around 1000: As the price reaches approximately 1000, there is a significant increase in room occupancy. This could indicate a pricing sweet spot where more guests find the rooms affordable, resulting in higher occupancy.

3.Price Range 1000-2000: Between 1000 and 2000, the availability of rooms decreases, implying that fewer rooms are available within this price range. This could be due to increased demand or limited inventory in that specific pricing bracket.

4.Increasing Prices: As prices rise beyond 2000, room availability starts to increase. This suggests a correlation where higher-priced rooms tend to have more availability.

5.Maximum Price (10000): At the maximum price point of 10000, a few rooms are fully occupied, while others remain available. This indicates that there might be a luxury tier with exclusive features or limited availability.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, The plots illustrates the dynamic interplay between room prices and occupancy levels over the course of the year, offering insights into pricing strategies and demand fluctuations.

#### Chart - 9
"""

# Chart - 9 visualization code

# Calculate the mean of number_of_reviews  for each neighbourhood group.
number_of_reviews_means = air_df.groupby('neighbourhood_group')['number_of_reviews'].mean()


# Create a bar plot for the average number of reviews for each neighbourhood group
fig1 = px.bar(number_of_reviews_means, x= number_of_reviews_means.index, y='number_of_reviews')
fig1.update_layout(title='Average number of reviews for each neighbourhood group',
                   xaxis_title='Neighbourhood group',
                   yaxis_title='Average number of reviews')
#fig1.update_xaxes('Neighbourhood group')
#fig1.update_yaxes('Average number of reviews')
fig1.show()

"""##### 1. Why did you pick the specific chart?

In the above graph, we observe interesting patterns in the average reviews of different neighborhood groups in New York City Airbnb listings.

##### 2. What is/are the insight(s) found from the chart?

Staten Island stands out with the highest average number of reviews. This can be attributed to the fact that even though it has fewer hotels, the quality of service is commendable.

On the contrary, Manhattan records the lowest average reviews. This could be due to the sheer volume of listings, making it challenging for individual listings to accumulate higher average reviews.

Inverse Relationship with Hotel Numbers: Interestingly, there appears to be a slight inverse relationship between the number of hotels in a neighborhood group and the average number of reviews. As the number of hotels increases, the average reviews per listing tend to decrease. This phenomenon might be influenced by factors such as competition and varying service quality among numerous listings.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes.

#### Chart - 10
"""

# Chart - 10 visualization code
# Calculate the mean of price for each neighbourhood group
neighbourhoodgroup_price_means = air_df.groupby('neighbourhood_group')['price'].mean()

# Create a bar plot for the average price each neighbourhood group
fig1 = px.bar(neighbourhoodgroup_price_means, x=neighbourhoodgroup_price_means.index, y='price')
fig1.update_layout(title='Average price for each neighbourhood group',
                   xaxis_title='Neighbourhood group',
                   yaxis_title='Average price')
fig1.show()

"""##### 1. Why did you pick the specific chart?

The above barplot of the average prices of neighborhood groups showcases a notable disparity in pricing across different areas.

##### 2. What is/are the insight(s) found from the chart?

Manhattan stands out with the highest average price of 196.9, reflecting its status as a prime and sought-after location with premium pricing. Brooklyn, with an average price of 124.4, and Staten Island, with an average price of 114.8, appear to offer moderately priced accommodations, potentially appealing to budget-conscious travelers seeking a balance between cost and location. Conversely, the Bronx and Queens exhibit comparatively lower average prices at 87.5 and 99.5, respectively, potentially suggesting more affordable accommodation options in these areas.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

These insights can aid both guests and hosts in understanding the diverse pricing landscape across neighborhoods, catering to a wide range of budget preferences.

#### Chart - 11
"""

# Chart - 11 visualization code
neighbourhoodgroup_calculated_hostlisting = air_df.groupby('neighbourhood_group')['calculated_host_listings_count'].sum()


# Create a bar plot for the average price each neighbourhood group
fig1 = px.bar(neighbourhoodgroup_calculated_hostlisting, x=neighbourhoodgroup_calculated_hostlisting.index, y='calculated_host_listings_count')
fig1.update_layout(title='Total number of host listing for each neighbourhood group',
                   xaxis_title='Neighbourhood group',
                   yaxis_title='Total number of host listing')
fig1.show()

"""##### 1. Why did you pick the specific chart?

This bar chart shows the distribution of total number of calculated host listings among different neoghbourhood groups, such as Manhattan, Brooklyn, Queens, Bronx, and Staten Island.

##### 2. What is/are the insight(s) found from the chart?

The data reveals that the neighbourhood group with the highest number of calculated host listings is Manhattan, totaling 277,044. This indicates a significant presence of Airbnb accommodations in Manhattan. Moreover, Brooklyn follows closely with 45,908 host listings, suggesting a thriving Airbnb market in this neighbourhood group as well. Queens exhibits a substantial count of 23,003 host listings, indicating a good availability of accommodations. On the other hand, Bronx demonstrates a relatively lower number of host listings with 2,435, suggesting a smaller Airbnb presence. Finally, Staten Island has the lowest count of calculated host listings, with 865. These insights provide valuable information about the distribution and scale of Airbnb accommodations across different neighbourhood groups, supporting further analysis and decision-making in the realm of Airbnb booking strategies and market expansion efforts.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

yes.

#### Chart - 12
"""

air_df['revenues'] = air_df['price']*air_df['rooms_occupied_365']
air_df.head()

# Chart - 12 visualization code
## Create a bar plot for Distribution of  Revenues for  each neighbourhood group
neighbourhoodgroup_revenues = air_df.groupby('neighbourhood_group')['revenues'].sum()

# Create a bar plot for the Revenue for each neighbourhood group
fig1 = px.bar(neighbourhoodgroup_revenues, x=neighbourhoodgroup_revenues.index, y='revenues')
fig1.update_layout(title='Distribution of Revenues by neighbourhood group', xaxis_title = 'Neighbourhood Group', yaxis_title = 'Revenues')
fig1.show()

"""##### 1. Why did you pick the specific chart?

The above bar chart shows the distribution of Revenues by each Neighbourhood group.

##### 2. What is/are the insight(s) found from the chart?

According to the data, the Neighbourhood group with the highest revenue is Manhattan, amounting to 979,344,000 units of currency. This signifies that Manhattan is the most lucrative Neighbourhood group for Airbnb hosts, likely due to factors such as high demand and relatively higher rental prices. Brooklyn follows next, with a revenue of 632,545,000 units. Though slightly lower than Manhattan, Brooklyn still asserts its position as a profitable Airbnb destination.


Queens emerges as the third highest revenue-generating Neighbourhood group with a total of 119,293,800 units. This indicates that Queens also attracts substantial bookings and contributes significantly to Airbnb's revenue. Bronx, with a revenue of 17,921,510 units, demonstrates a comparatively lower income generation. Lastly, Staten Island registers the lowest revenue among all the Neighbourhood groups, amounting to 6,564,156 units.


These insights provide a valuable understanding of the revenue distribution across different Neighbourhood groups within the Airbnb platform. Such information can support hosts and stakeholders in making informed decisions about investment, pricing, and marketing strategies in order to maximize revenue potential within specific Neighbourhood groups.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

yes.

#### Chart - 13
"""

# Chart - 13 visualization code
# Create a bar plot for Distribution of  Revenues for  each Room type
revenues_by_roomtype = air_df.groupby('room_type')['revenues'].sum()

# Create a bar plot for the Revenue for each room type
fig1 = px.bar(revenues_by_roomtype, x=revenues_by_roomtype.index, y='revenues')
fig1.update_layout(title='Distribution of Revenues by Room type', xaxis_title = 'Room Type ', yaxis_title = 'Revenues')
fig1.show()

"""##### 1. Why did you pick the specific chart?

The bar plot illustrating the distribution of revenues for each room type in the provided data of Airbnb bookings offers valuable insights. It demonstrates the revenue contribution of different room types to the overall Airbnb platform.

##### 2. What is/are the insight(s) found from the chart?

According to the data, the room type that generates the highest revenue is "Entire Home/Apartment," with a total of 1,255,566,000 units. This suggests that guests prefer booking entire homes or apartments, potentially indicating a demand for more private and spacious accommodations.


The second-highest revenue contribution comes from the "Private Room" category, amounting to 481,867,300 units. While not as significant as the "Entire Home/Apartment" category, the revenue generated from private rooms still holds a substantial portion of the overall earnings, indicating a preference for shared accommodation options with private rooms.


On the other hand, the "Shared Room" type exhibits a comparatively smaller revenue contribution, with a total of 18,236,010 units. This suggests that shared room accommodations are less popular among guests, potentially due to a preference for more privacy and comfort during their stay.


These insights highlight the significance of different room types within the Airbnb platform and provide valuable information for hosts and stakeholders. By understanding the revenue distribution across different room types, hosts can make informed decisions regarding pricing, marketing, and resource allocation to tailor their offerings and maximize revenue potential.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

yes.

#### Chart - 14 - Correlation Heatmap
"""

# here we select the variables with interger or float data types to draw Correlation heatmap
air_df_corr = air_df[['neighbourhood_group','latitude', 'longitude','price','minimum_nights','number_of_reviews', 'reviews_per_month', 'calculated_host_listings_count', 'rooms_occupied_365','revenues']]
air_df_corr

# here we find the co-relation between different variables
air_df_corr.corr()

# Correlation Heatmap visualization code
# here is the code for heatmap
# i have figsize so that the values donot overlap to eachother
plt.figure(figsize=(12, 10))
sns.heatmap(data = air_df_corr.corr(), annot = True, cmap = 'viridis')
plt.show()

"""##### 1. Why did you pick the specific chart?

We choose this specific chart to visually represent  the relationship among different variables of the dataset.

##### 2. What is/are the insight(s) found from the chart?

Based on the provided correlation heatmap, we can observe the following insights:


Latitude and Longitude: The correlation between latitude and longitude is relatively low (0.085), indicating a weak relationship. This suggests that the location coordinates (latitude and longitude) of the listings have minimal impact on other variables.

Price: There is a positive correlation (0.034) between latitude and the price of listings. This implies that, to some extent, listings located at higher latitudes tend to have higher prices.

Minimum Nights: There is a weak positive correlation (0.026) between latitude and the minimum number of nights that can be booked. This suggests that listings at higher latitudes may require a slightly longer minimum stay.

Number of Reviews and Reviews per Month: The number of reviews and reviews per month have a moderate positive correlation with longitude (0.059 and 0.132 respectively). This implies that listings with higher longitude values (eastern locations) tend to have more reviews and higher review rates per month.

Calculated Host Listings Count: There is a weak positive correlation (0.020) between latitude and the number of listings per host. This indicates that hosts with more listings tend to have listings at higher latitudes.

Rooms Occupied 365: The number of rooms occupied throughout the year has a weak negative correlation with both longitude and the number of reviews (-0.083 and -0.172 respectively). This suggests that listings located at higher longitudes and with more reviews tend to have slightly fewer rooms occupied throughout the year.

Revenues: Price has a moderate positive correlation (0.741) with revenues, indicating that higher-priced listings tend to generate more revenue.


These insights shed light on the relationships between different variables in the dataset. However, it's important to note that correlation does not imply causation, and further analysis is needed to establish any causal relationships or deeper insights.

#### Chart - 15 - Pair Plot
"""

# Pair Plot visualization code
# Create a pair plot of the air_df dataset
sns.pairplot(data = air_df_corr, hue = 'neighbourhood_group')
# to show plot
plt.show()

"""##### 1. Why did you pick the specific chart?

Pair plot is used to understand the best set of features to explain a relationship between two variables or to form the most separated clusters. It also helps to form some simple classification models by drawing some simple lines or make linear separation in our data-set.

Thus, I used pair plot to analyse the patterns of data and realationship between the features. It's exactly same as the correlation map but here you will get the graphical representation.

##### 2. What is/are the insight(s) found from the chart?

The graph between price and revenue is liner,as the price increase the rooms occupancy decreases,there is a rectangular hyperbolic ralation between the price  and minimum number of nights. Same relation shows between the the price and number of reviews.

## **5. Solution to Business Objective**

#### What do you suggest the client to achieve Business Objective ?
Explain Briefly.

Here are some suggestions for the client to achieve their business objectives:

Focus on Entire Homes/Apartments and Private Rooms: Since these accommodation types are preferred by customers, the client should prioritize these options in their offerings. They can target marketing efforts towards promoting the unique features and benefits of these accommodation types.

Improve Occupancy Rates in Shared Rooms: As shared rooms have lower occupancy rates, the client can consider implementing strategies to increase demand for this category. This could include offering attractive discounts or highlighting the social and communal experience of staying in shared rooms.

Target Marketing Efforts in Brooklyn and Manhattan: Hotels in these neighborhoods have higher room occupancy rates, indicating higher demand. The client can allocate more resources towards marketing their accommodations in these areas to attract more customers.

Analyze and Optimize Pricing: Since hotel prices in NYC vary widely, the client should analyze their pricing strategy and consider factors such as location, demand, and competition. They can identify pricing sweet spots and adjust their rates accordingly to attract more customers while maximizing revenue.

Enhance Customer Reviews and Satisfaction: Customer reviews play a crucial role in attracting new customers. The client should focus on providing excellent service and experiences to their guests to improve their average reviews and overall customer satisfaction. This can involve continuous training for staff, ensuring cleanliness and comfort, and addressing any customer concerns promptly.

Explore Expansion Opportunities: The client can consider expanding their operations in neighborhoods with high demand and potential for growth, such as Manhattan, Brooklyn, and Queens. They can conduct market research to identify areas with untapped potential and develop strategies to enter those markets effectively.

Leverage Data and Market Insights: The client should continuously monitor and analyze market trends, customer preferences, and competition. They can use data-driven insights to make informed decisions regarding pricing, marketing strategies, and inventory management.

Collaborate with Local Partners: Building partnerships with local businesses, attractions, and events can help the client attract more customers and provide value-added services to enhance the overall guest experience. This can include partnerships with tour operators, restaurants, and cultural institutions.

Invest in Customer Service and Operations: Providing excellent customer service and maintaining operational efficiency are crucial for customer satisfaction and repeat bookings. The client should invest in training their staff, adopting efficient processes, and ensuring prompt communication and problem resolution.

Develop a Strong Online Presence: In today's digital age, having a strong online presence is critical for success. The client should invest in professional and user-friendly websites, optimize their listings on booking platforms, and actively engage with customers through social media to attract and retain customers.

These suggestions are based on the provided information and aim to support the client in achieving their business objectives. It is essential for the client to further analyze the market, consider their specific goals and constraints, and adapt these suggestions accordingly.

# **Conclusion**

In conclusion, the analysis of the provided data highlights several key points and recommendations for the client to achieve their business objectives in the accommodation and hospitality industry. These key points include:

Understanding customer preferences: The data shows a preference for entire homes/apartments and private rooms, suggesting that the client should prioritize these options in their offerings.

Focus on high-demand areas: Brooklyn and Manhattan have higher room occupancy rates, indicating higher demand. The client can allocate resources towards marketing and expanding their operations in these neighborhoods.

Pricing optimization: Analyzing the pricing trends and customer behavior, the client should consider adjusting their pricing strategy to maximize occupancy and revenue.

Enhancing customer experience: To attract and retain customers, the client should focus on providing excellent customer service, maintaining cleanliness and comfort, and addressing customer concerns promptly.

Capitalize on online presence: Developing a strong online presence through user-friendly websites, optimized listings on booking platforms, and active engagement on social media can significantly impact the client's visibility and customer acquisition.

It is important for the client to further evaluate the specific market dynamics, competition, and unique aspects of their business to tailor these recommendations accordingly. Adapting and continuously analyzing market trends along with customer preferences will be key to successfully achieving the client's business objectives in the highly competitive accommodation industry.

### ***Hurrah! You have successfully completed your EDA Capstone Project !!!***
"""